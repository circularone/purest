<?php

/**
 * @file
 * Contains purest_menus.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_help().
 */
function purest_menus_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the purest_menus module.
    case 'help.page.purest_menus':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides a menu link normalizer and two rest resources to retrieve a single menu or multiple menus.') . '</p>';
      $output .= '<h3>' . t('Normalizer') . '</h3>';
      $output .= '<p>' . t('<a href=":url">The settings form</a> includes an form allowing exclusion and renaming of every menu item field key.', [':url' => Url::fromRoute('purest_menus.config')->toString()]) . '</p>';
      $output .= '<h3>' . t('Menus Resource') . '</h3>';
      $output .= '<p>' . t('The menus resource returns an array of menus. <a href=":url">The settings form</a> includes an autocomplete field where you can select from any existing menus.', [':url' => Url::fromRoute('purest_menus.config')->toString()]) . '</p>';
      $output .= '<p>' . t('The resource accepts an alias parameter. If a valid internal path is supplied the active trail the active trail will be indicated. e.g. /purest/menus?alias=/internal-path') . '</p>';
      $output .= '<h3>' . t('Menu Resource') . '</h3>';
      $output .= '<p>' . t('The menu resource returns a single menu specified in the resource path. e.g. "/purest/menu/[menu_name_here]". Pass an internal path to have the active trail indicated. e.g. /purest/menus?alias=/internal-path') . '</p>';
      $output .= '<p>' . t('The resource accepts an alias parameter. If a valid internal path is supplied the active trail the active trail will be indicated. e.g. /purest/menus?alias=/internal-path') . '</p>';
      
      return $output;
      break;

    default:
  }
}

/**
 * Implements hook_entity_base_field_info().
 *
 * Add custom field to menu_link_content entities.
 */
function purest_menus_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];

  if ($entity_type->id() == 'menu_link_content') {
    $fields['purest_menus_in_active_trail'] = BaseFieldDefinition::create('boolean')
      ->setLabel(t('In Active Trail'))
      ->setDescription('Indicates if the link is in the active trail');

    $fields['purest_menus_has_subtree'] = BaseFieldDefinition::create('boolean')
      ->setLabel(t('Has Subtree'))
      ->setDescription('Indicates if the link has sub links');

    $fields['purest_menus_subtree'] = BaseFieldDefinition::create('map')
      ->setLabel(t('Subtree'))
      ->setDescription('Child links of the link item');
  }

  return $fields;

}
